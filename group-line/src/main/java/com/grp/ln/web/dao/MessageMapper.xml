<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.grp.ln.web.dao.MessageMapper">
	<resultMap id="BaseResultMap" type="com.grp.ln.web.model.Message">
		<id column="msgId" property="msgId" jdbcType="VARCHAR" />
		<result column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="dateTime" property="dateTime" jdbcType="VARCHAR" />
		<result column="readTime" property="readTime" jdbcType="CHAR" />
		<result column="encrypt" property="encrypt" jdbcType="VARCHAR" />
		<result column="commentIds" property="commentIds" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		msgId, userId, type, content, dateTime, readTime, encrypt, commentIds
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.grp.ln.web.model.MessageExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from message
		where msgId = #{msgId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from message
		where msgId = #{msgId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.grp.ln.web.model.MessageExample">
		delete from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.grp.ln.web.model.Message">
		insert into message (msgId, userId, type,
		content, dateTime, readTime,
		encrypt, commentIds)
		values (#{msgId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{content,jdbcType=VARCHAR}, #{dateTime,jdbcType=VARCHAR}, #{readTime,jdbcType=CHAR},
		#{encrypt,jdbcType=VARCHAR}, #{commentIds,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.grp.ln.web.model.Message">
		insert into message
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="msgId != null">
				msgId,
			</if>
			<if test="userId != null">
				userId,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="dateTime != null">
				dateTime,
			</if>
			<if test="readTime != null">
				readTime,
			</if>
			<if test="encrypt != null">
				encrypt,
			</if>
			<if test="commentIds != null">
				commentIds,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="msgId != null">
				#{msgId,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="dateTime != null">
				#{dateTime,jdbcType=VARCHAR},
			</if>
			<if test="readTime != null">
				#{readTime,jdbcType=CHAR},
			</if>
			<if test="encrypt != null">
				#{encrypt,jdbcType=VARCHAR},
			</if>
			<if test="commentIds != null">
				#{commentIds,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.grp.ln.web.model.MessageExample"
		resultType="java.lang.Integer">
		select count(*) from message
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update message
		<set>
			<if test="record.msgId != null">
				msgId = #{record.msgId,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				userId = #{record.userId,jdbcType=VARCHAR},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=VARCHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=VARCHAR},
			</if>
			<if test="record.dateTime != null">
				dateTime = #{record.dateTime,jdbcType=VARCHAR},
			</if>
			<if test="record.readTime != null">
				readTime = #{record.readTime,jdbcType=CHAR},
			</if>
			<if test="record.encrypt != null">
				encrypt = #{record.encrypt,jdbcType=VARCHAR},
			</if>
			<if test="record.commentIds != null">
				commentIds = #{record.commentIds,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update message
		set msgId = #{record.msgId,jdbcType=VARCHAR},
		userId = #{record.userId,jdbcType=VARCHAR},
		type = #{record.type,jdbcType=VARCHAR},
		content = #{record.content,jdbcType=VARCHAR},
		dateTime = #{record.dateTime,jdbcType=VARCHAR},
		readTime = #{record.readTime,jdbcType=CHAR},
		encrypt = #{record.encrypt,jdbcType=VARCHAR},
		commentIds = #{record.commentIds,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.grp.ln.web.model.Message">
		update message
		<set>
			<if test="userId != null">
				userId = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="dateTime != null">
				dateTime = #{dateTime,jdbcType=VARCHAR},
			</if>
			<if test="readTime != null">
				readTime = #{readTime,jdbcType=CHAR},
			</if>
			<if test="encrypt != null">
				encrypt = #{encrypt,jdbcType=VARCHAR},
			</if>
			<if test="commentIds != null">
				commentIds = #{commentIds,jdbcType=VARCHAR},
			</if>
		</set>
		where msgId = #{msgId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.grp.ln.web.model.Message">
		update message
		set userId = #{userId,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		dateTime = #{dateTime,jdbcType=VARCHAR},
		readTime = #{readTime,jdbcType=CHAR},
		encrypt = #{encrypt,jdbcType=VARCHAR},
		commentIds = #{commentIds,jdbcType=VARCHAR}
		where msgId = #{msgId,jdbcType=VARCHAR}
	</update>

	<select id="selectMsgByGroup" resultMap="BaseResultMap"
		parameterType="String">
		SELECT
		m.*,
		mg.grpId
		FROM
		msg_group mg,
		message m
		WHERE
		mg.msgId = m.msgId
		AND mg.grpId = #{grpId}
		ORDER BY
		dateTime
	</select>
</mapper>